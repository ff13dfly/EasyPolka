//!important, This is a node.js loader demo, to load `node on-chain application`.
//!important, The breif rule is treating it as cache service and can be stopped anytime.
//!important, Load unkown `node on-chain application` will face security problem.
const config={error:"\x1B[36m%s\x1B[0m",success:"\x1B[36m%s\x1B[0m",symbol:["%{{%","%}}%"],check:!1};console.log(config.success,`
********************** Anchor Network Loader proccess start ***********************`);const fs=require("fs"),args=process.argv.slice(2);if(!args[0])return console.log(config.error,"Error: no input Anchor Link.");const linker=args[0],server=args[1]?args[1]:"ws://127.0.0.1:9944",anchorJS=require("../../../package/node/anchor.node.js"),{ApiPromise,WsProvider}=require("../../../package/node/polkadot.node.js"),{easyRun}=require("../../../package/node/easy.node.js");let websocket=null;const self={auto:r=>{if(websocket!==null)return r&&r();console.log(`Ready to link to server ${server}.`),ApiPromise.create({provider:new WsProvider(server)}).then(e=>(console.log(config.success,`Linker to node [${server}] created.`),websocket=e,anchorJS.set(e),r&&r()))}};console.log(config.success,`Ready to decode Anchor Link : ${linker} .`),self.auto(()=>{const startAPI={common:{latest:anchorJS.latest,target:anchorJS.target,history:anchorJS.history,owner:anchorJS.owner,subcribe:anchorJS.subcribe,block:anchorJS.block}};easyRun(linker,startAPI,result=>{let code=result.code;if(result.libs&&result.libs.order&&result.libs.order.length!==0){const r={};for(let e=0;e<result.libs.order.length;e++){const o=result.libs.order[e],s=`${o[0]}_${o[1]}`;if(result.data[s]){const n=result.data[s],t=new RegExp(`${config.symbol[0]}${n.name}${config.symbol[1]}`,"g");code=code.replace(t,`(function(){${n.raw};return module.exports;})()`)}}}//!important, these functions limit the application
const API={anchorJS,easy:easyRun,polka:()=>{},ether:()=>{}},input={target:linker},file={read:(r,e)=>{fs.stat(r,(o,s)=>{if(o)return e&&e({error:o});if(!s.isFile())return e&&e(!1);fs.readFile(r,(n,t)=>n?e&&e({error:n}):e&&e(t.toString()))})},save:(r,e,o)=>{fs.writeFile(r,e,"utf8",function(s){return s?o&&o({error:s}):o&&o(!0)})}};config.check&&file.save("check.js",code);try{console.log(config.success,`********************* Anchor Network Loader proccess finished *********************
`),eval(code)}catch(r){console.log(config.error,`Error: failed to load application from ${linker}.`),console.log(config.success,`********************* Anchor Network Loader proccess finished *********************
`)}})});
